package cn.com.amber.controller;import cn.com.amber.entity.Account;import cn.com.amber.mapper.AccountMapper;import cn.com.amber.remote.AccountFacade;import com.alibaba.fastjson2.JSONObject;import org.springframework.beans.factory.annotation.Value;import org.springframework.util.StringUtils;import org.springframework.web.bind.annotation.PathVariable;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.bind.annotation.RestController;import javax.annotation.Resource;/** * TODO:class description * * @author yangying * @version 1.0 * @since 2022/9/3 **/@RestController@RequestMapping(path = "/user")public class MyFristController {    @Resource    private AccountMapper accountMapper;    @Resource    private AccountFacade accountFacade;    @Value("${accountUrl}")    private String accountUrl;    @RequestMapping(path = "/getUser/{userId}")    public String getUer(@PathVariable String userId){        if(userId.equals("111")){            return "john";        }        return "has not found";    }    /**     * 测试从Feign与Eureka的集成，从Eureka的服务列表中请求远程服务     * @param accountNo     * @return     */    @RequestMapping(path = "/getAccount/{accountNo}")    public String getAccount(@PathVariable String accountNo){        if(StringUtils.isEmpty(accountNo)){            return "get nothing";        }        Account account = accountMapper.selectByAccountNo(accountNo);        return JSONObject.toJSONString(account);    }    @RequestMapping(path = "/getRemoteAccount/{accountNo}")    public String getRemoteAccount(@PathVariable String accountNo){        return accountFacade.queryAccount(accountNo);    }    /**     * 测试从apollo获取配置     * @return     */    @RequestMapping(path = "/getAccountUrl")    public String getRemoteAccount(){        return accountUrl;    }}